glCheckFramebufferStatus(GL.FRAMEBUFFER) == GL.FRAMEBUFFER_COMPLETE);
glActiveTexture(GL.TEXTURE0);
glBindBuffer(GL.ELEMENT_ARRAY_BUFFER, CreateBuffers(1)[0]);
glBindFramebuffer(GL.FRAMEBUFFER, 0u);
glBindRenderbuffer(GL.RENDERBUFFER, renderbuffer);
glBindTexture(GL.TEXTURE_2D, textures[i]);
glBindVertexArray(_cubeVertexArray);
glBindVertexArray(CreateVertexArrays(1)[0]);
glBufferData(target, Marshal.SizeOf<T>() * data.Length, ptr, GL.STATIC_DRAW);
glClear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);
glCreateTextures(GL.TEXTURE_2D, uints.Length, uints);
glCullFace(value);
glDebugMessageCallback(_debugProc = HandleDebug, IntPtr.Zero);
glDisable(GL.CULL_FACE);
glDisable(GL.DEPTH_TEST);
glDrawArrays(GL.TRIANGLES, 0, 6);
glDrawArraysInstanced(GL.TRIANGLES, 0, 6, 4);
glDrawBuffers(drawbuffers.Length, drawbuffers);
glDrawElements(GL.TRIANGLES, 6, GL.UNSIGNED_INT, IntPtr.Zero);
glDrawElementsInstanced(GL.TRIANGLES, 6, GL.UNSIGNED_INT, IntPtr.Zero, 4);
glEnable(GL.DEPTH_TEST);
glEnableVertexAttribArray(attribute);
glFramebufferRenderbuffer(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.RENDERBUFFER, renderbuffer);
glFramebufferTexture(GL.FRAMEBUFFER, drawbuffers[i], _textures[i], 0);
glGenerateTextureMipmap(texture);
glGetIntegerv(cap, out var i);
glGetTextureParameterfv(texture, parameter, floats);
glGetTextureParameteriv(texture, parameter, ints);
glMultiDrawArrays(GL.TRIANGLES, _first, _count, _drawCount);
glReadBuffer(drawbuffers[4]);
glReadnPixels(x, y, 1, 1, GL.RED_INTEGER, GL.INT, sizeof(int), l);
glRenderbufferStorage(GL.RENDERBUFFER, GL.DEPTH_COMPONENT, Width, Height);
glTextureParameterf(Identifier, GL.TEXTURE_LOD_BIAS, value);
glTextureParameteri(texture, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);
glTextureStorage2D(texture, mipmapLevels, GL.RGBA8, b.Width, b.Height);
glTextureSubImage2D(texture, 0, 0, 0, b.Width, b.Height, GL.BGRA, GL.UNSIGNED_BYTE, l);
glUniformMatrix4fv(location, 1, false, l);
glVertexAttribDivisor(program.Displacement, 1u);
glVertexAttribPointer(attribute, size, type, false, 0, IntPtr.Zero);